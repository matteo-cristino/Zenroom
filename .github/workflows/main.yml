name: zenroom-releases
on:
  push:
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  verison:
    name: version
    runs-on: ubuntu-latest
    run: |
      echo ""
      echo "##############################"
      echo ${{ github.ref }}
      echo "------------------------------"
      echo ${{ github.ref_name }}
      echo "##############################"
      echo ""

#  python-build-check:
#    name: üêç Python build & checks
#    runs-on: ${{ matrix.os }}
#    if: ${{ github.ref_name == 'master' && github.event_name == 'push' }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ubuntu-latest, macos-latest]
#        python-version: [38, 39, 310, 311]
#        platform_id: [manylinux_x86_64, manylinux_i686, manylinux_aarch64, macosx_x86_64]
#        exclude:
#          - os: macos-latest
#            platform_id: manylinux_x86_64
#          - os: macos-latest
#            platform_id: manylinux_i686
#          - os: macos-latest
#            platform_id: manylinux_aarch64
#          - os: ubuntu-latest
#            platform_id: macosx_x86_64
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v3
#      - uses: docker/setup-qemu-action@v2
#        if: runner.os == 'Linux'
#        with:
#          platforms: all
#      - name: Build wheels
#        env:
#          CIBW_BUILD: cp${{ matrix.python-version }}-${{ matrix.platform_id }}
#          CIBW_ARCHS_LINUX: auto aarch64
#          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
#          CIBW_MANYLINUX_I686_IMAGE: manylinux_2_24
#          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_24
#          CIBW_BEFORE_BUILD_LINUX: apt-get update && apt-get install -y cmake zsh vim && pip install meson ninja
#          CIBW_BEFORE_BUILD_MACOS: brew install cmake zsh && pip install meson ninja
#          CIBW_TEST_EXTRAS: "test"
#          CIBW_TEST_COMMAND: "pytest -s {project}/bindings/python3/tests"
#        run: |
#          git show -s --format=%ct HEAD > commit_time
#          # Remove shared library
#          rm -f bindings/golang/zenroom/lib/libzenroom.so
#          cp bindings/python3/setup.py .
#          pip install cibuildwheel
#          cibuildwheel --output-dir wheelhouse
#      - uses: actions/upload-artifact@v3
#        with:
#          path: ./wheelhouse/*.whl
#
#  python-sdist:
#    name: üêç Python create source distribution
#    runs-on: ubuntu-latest
#    needs: [python-build-check]
#    defaults:
#      run:
#        working-directory: bindings/python3
#    steps:
#    - uses: actions/checkout@v3
#    - run: |
#          sudo apt-get install --force-yes cmake vim zsh
#          pip install meson ninja twine
#    - run: pipx run build --sdist
#    - run: twine check dist/*.tar.gz
#    - uses: actions/upload-artifact@v3
#      with:
#        path: ./bindings/python3/dist/*.tar.gz
#
#  npm-release:
#    name: üì¶ npm release
#    runs-on: ubuntu-latest
#    needs: js-build-check
#    if: ${{ github.ref_name == 'master' && github.event_name == 'push' }}
#    env:
#      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#    steps:
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 16.x
#          registry-url: 'https://registry.npmjs.org'
#      - uses: actions/download-artifact@v3
#        with:
#          name: javascript-artifact
#          path: .
#      - run: npm publish . --tag next
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#
#  pypi-release:
#    name: üì¶ PyPI release
#    if: ${{ github.ref_name == 'master' && github.event_name == 'push' }}
#    needs: [python-sdist]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/download-artifact@v3
#        with:
#          name: artifact
#          path: dist
#      - uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
#
